// <auto-generated />
using BurgerApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BurgerApp.DataAccess.Migrations
{
    [DbContext(typeof(BurgerAppDbContext))]
    [Migration("20231013120908_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BurgerApp.Domain.Models.BestCombo", b =>
                {
                    b.Property<int>("BestComboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BestComboId"), 1L, 1);

                    b.Property<string>("BestComboName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BurgerId")
                        .HasColumnType("int");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.Property<int>("FriesId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RoadToImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BestComboId");

                    b.HasIndex("BurgerId");

                    b.HasIndex("DrinkId");

                    b.HasIndex("FriesId");

                    b.ToTable("BestCombos", "dbo");
                });

            modelBuilder.Entity("BurgerApp.Domain.Models.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrinkId"), 1L, 1);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RoadToImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrinkId");

                    b.ToTable("Drinks", "dbo");

                    b.HasData(
                        new
                        {
                            DrinkId = 1,
                            Calories = 140,
                            Name = "Coca Cola",
                            Price = 2.0,
                            RoadToImage = "~/Images/Drinks/CocaCola.png",
                            Size = "0.33"
                        },
                        new
                        {
                            DrinkId = 2,
                            Calories = 150,
                            Name = "Pepsi",
                            Price = 2.0,
                            RoadToImage = "~/Images/Drinks/Pepsi.png",
                            Size = "0.33"
                        },
                        new
                        {
                            DrinkId = 3,
                            Calories = 120,
                            Name = "Fanta",
                            Price = 2.0,
                            RoadToImage = "~/Images/Drinks/Fanta.png",
                            Size = "0.33"
                        },
                        new
                        {
                            DrinkId = 4,
                            Calories = 110,
                            Name = "Orange Juice",
                            Price = 2.0,
                            RoadToImage = "~/Images/Drinks/OrangeJuice.png",
                            Size = "0.33"
                        },
                        new
                        {
                            DrinkId = 5,
                            Calories = 90,
                            Name = "Ice Tea",
                            Price = 2.0,
                            RoadToImage = "~/Images/Drinks/Lipton.png",
                            Size = "0.33"
                        },
                        new
                        {
                            DrinkId = 6,
                            Calories = 80,
                            Name = "Rosa",
                            Price = 2.0,
                            RoadToImage = "~/Images/Drinks/Rosa.png",
                            Size = "0.33"
                        },
                        new
                        {
                            DrinkId = 7,
                            Calories = 70,
                            Name = "Heineken",
                            Price = 2.0,
                            RoadToImage = "~/Images/Drinks/Heineken.png",
                            Size = "0.33"
                        });
                });

            modelBuilder.Entity("BurgerApp.Domain.Models.Fries", b =>
                {
                    b.Property<int>("FriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FriesId"), 1L, 1);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RoadToImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FriesId");

                    b.ToTable("Fries", "dbo");

                    b.HasData(
                        new
                        {
                            FriesId = 1,
                            Calories = 150,
                            Price = 3.0,
                            RoadToImage = "~/Images/Fries/SmallFries.png",
                            Size = "Small"
                        },
                        new
                        {
                            FriesId = 2,
                            Calories = 250,
                            Price = 6.0,
                            RoadToImage = "~/Images/Fries/MediumFries.png",
                            Size = "Medium"
                        },
                        new
                        {
                            FriesId = 3,
                            Calories = 350,
                            Price = 9.0,
                            RoadToImage = "~/Images/Fries/LargeFries.png",
                            Size = "Large"
                        });
                });

            modelBuilder.Entity("BurgerApp.Models.Domain.Burger", b =>
                {
                    b.Property<int>("BurgerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BurgerId"), 1L, 1);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RoadToImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BurgerId");

                    b.ToTable("Burgers", "dbo");

                    b.HasData(
                        new
                        {
                            BurgerId = 1,
                            Calories = 600,
                            Description = "A juicy 100% Angus beef patty topped with fresh lettuce, ripe tomatoes, sliced red onions, and a special house-made burger sauce, all served on a toasted sesame seed bun.",
                            Name = "Classic Beef Burger",
                            Price = 10.0,
                            RoadToImage = "~/Images/Burgers/ClassicBurger.png"
                        },
                        new
                        {
                            BurgerId = 2,
                            Calories = 450,
                            Description = "A mouthwatering veggie patty made from black beans, chickpeas, and quinoa, topped with avocado slices, grilled zucchini, roasted bell peppers, and a tangy garlic aioli, served on a whole wheat bun.",
                            Name = "Veggie Burger",
                            Price = 8.5,
                            RoadToImage = "~/Images/Burgers/VeggieBurger.png"
                        },
                        new
                        {
                            BurgerId = 3,
                            Calories = 720,
                            Description = "Crispy chicken breast tossed in spicy Sriracha sauce, topped with pepper jack cheese, pickled jalapenos, coleslaw, tomato, and a drizzle of Sriracha mayo, served on a sesame seed bun.",
                            Name = "Spicy Sriracha Chicken Burger",
                            Price = 11.5,
                            RoadToImage = "~/Images/Burgers/Chicken.png"
                        },
                        new
                        {
                            BurgerId = 4,
                            Calories = 550,
                            Description = "Grilled chicken breast topped with creamy avocado slices, mixed greens, red pepper flakes, and a zesty lime aioli, served on a ciabatta roll.",
                            Name = "Chicken Avocado Burger",
                            Price = 9.5,
                            RoadToImage = "~/Images/Burgers/AvocadoChicken.png"
                        },
                        new
                        {
                            BurgerId = 5,
                            Calories = 800,
                            Description = "A breakfast delight with a beef patty, fried egg, crispy bacon, American cheese, and maple aioli, all served on a buttery brioche bun.",
                            Name = "Breakfast Burger",
                            Price = 10.5,
                            RoadToImage = "~/Images/Burgers/BreakfastBurger.png"
                        },
                        new
                        {
                            BurgerId = 6,
                            Calories = 550,
                            Description = "A plant-based Beyond Meat patty topped with vegan cheese, lettuce, tomato, red onion, and a vegan mayo-based sauce, served on a gluten-free bun.",
                            Name = "Beyond Burger",
                            Price = 9.3000000000000007,
                            RoadToImage = "~/Images/Burgers/BeyondBurger.png"
                        },
                        new
                        {
                            BurgerId = 7,
                            Calories = 600,
                            Description = "A timeless favorite! Our juicy beef patty topped with cheddar cheese, fresh lettuce, ripe tomatoes, onions, pickles, and our secret special sauce, all nestled in a soft sesame seed bun.",
                            Name = "Classic Cheeseburger",
                            Price = 9.0,
                            RoadToImage = "~/Images/Burgers/ClassicCheeseburger.png"
                        },
                        new
                        {
                            BurgerId = 8,
                            Calories = 680,
                            Description = "For the cheese aficionados! This mouthwatering burger comes with a juicy beef patty, rich and tangy blue cheese crumbles, caramelized onions, and arugula on a toasted ciabatta bun.",
                            Name = "Blue Cheese Burger",
                            Price = 10.800000000000001,
                            RoadToImage = "~/Images/Burgers/BlueCheeseBurger.png"
                        },
                        new
                        {
                            BurgerId = 9,
                            Calories = 680,
                            Description = "A fiery beef patty topped with pepper jack cheese, pickled jalapenos, lettuce, and chipotle mayo, served on a jalapeno-cheddar bun.",
                            Name = "Spicy Jalapeno Burger",
                            Price = 9.1999999999999993,
                            RoadToImage = "~/Images/Burgers/JalapeñoBurger.png"
                        },
                        new
                        {
                            BurgerId = 10,
                            Calories = 800,
                            Description = "Juicy 100% Angus beef, topped with our secret smoky spices, melted cheddar cheese, bacon and fresh lettuce and chunky BBQ sauce, all served in our signature bun.",
                            Name = "Big Bite Burger",
                            Price = 12.5,
                            RoadToImage = "~/Images/Burgers/BigBiteBurger.png"
                        });
                });

            modelBuilder.Entity("BurgerApp.Domain.Models.BestCombo", b =>
                {
                    b.HasOne("BurgerApp.Models.Domain.Burger", "Burger")
                        .WithMany()
                        .HasForeignKey("BurgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerApp.Domain.Models.Drink", "Drink")
                        .WithMany()
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerApp.Domain.Models.Fries", "Fries")
                        .WithMany()
                        .HasForeignKey("FriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Burger");

                    b.Navigation("Drink");

                    b.Navigation("Fries");
                });
#pragma warning restore 612, 618
        }
    }
}
